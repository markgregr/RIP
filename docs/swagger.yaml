definitions:
  model.Baggage:
    properties:
      airline:
        example: AirlineX
        type: string
      baggage_code:
        example: ABC123
        type: string
      baggage_id:
        type: integer
      baggage_status:
        example: checked
        type: string
      baggage_type:
        example: suitcase
        type: string
      owner_name:
        example: John Doe
        type: string
      pasport_details:
        example: "123456789"
        type: string
      photo:
        example: http://example.com/baggage.jpg
        type: string
      size:
        example: large
        type: string
      weight:
        example: 23.5
        type: number
    type: object
  model.BaggageRequest:
    properties:
      airline:
        example: AirlineX
        type: string
      baggage_code:
        example: ABC123
        type: string
      baggage_type:
        example: suitcase
        type: string
      owner_name:
        example: John Doe
        type: string
      pasport_details:
        example: "123456789"
        type: string
      size:
        example: large
        type: string
      weight:
        example: 23.5
        type: number
    type: object
  model.BaggagesGetResponse:
    properties:
      baggages:
        items:
          $ref: '#/definitions/model.Baggage'
        type: array
      delivery_id:
        example: 1
        type: integer
    type: object
  model.DeliveryGetResponse:
    properties:
      baggages:
        items:
          $ref: '#/definitions/model.Baggage'
        type: array
      completion_date:
        type: string
      creation_date:
        type: string
      delivery_id:
        type: integer
      delivery_status:
        type: string
      flight_number:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
    type: object
  model.DeliveryRequest:
    properties:
      completion_date:
        type: string
      creation_date:
        type: string
      delivery_id:
        type: integer
      delivery_status:
        type: string
      flight_number:
        type: string
      formation_date:
        type: string
      full_name:
        type: string
    type: object
  model.DeliveryUpdateFlightNumberRequest:
    properties:
      flight_number:
        type: string
    type: object
  model.DeliveryUpdateStatusRequest:
    properties:
      delivery_status:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.Role:
    enum:
    - пользователь
    - модератор
    type: string
    x-enum-varnames:
    - UserRole
    - ModeratorRole
  model.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UserLoginResponse:
    properties:
      access_token:
        type: string
      full_name:
        type: string
      role:
        $ref: '#/definitions/model.Role'
    type: object
  model.UserRegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /baggage:
    get:
      description: Возращает список всех активных багажей
      parameters:
      - description: Код багажа
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.BaggagesGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получение списка багажа
      tags:
      - Багаж
  /baggage/{baggage_id}:
    get:
      description: Возвращает информацию о багаже по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о багаже
          schema:
            $ref: '#/definitions/model.Baggage'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получение багажа по ID
      tags:
      - Багаж
  /baggage/{baggage_id}/delete:
    delete:
      description: Удаляет багаж по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      - description: Код багажа
        format: email
        in: query
        name: searchCode
        type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.BaggagesGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаление багажа
      tags:
      - Багаж
  /baggage/{baggage_id}/delivery:
    delete:
      description: Удаляет багаж из доставки по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      - description: Код багажа
        format: email
        in: query
        name: searchCode
        type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.BaggagesGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаление багажа из доставки
      tags:
      - Багаж
    post:
      description: Добавляет багаж к доставке по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      - description: Код багажа
        format: email
        in: query
        name: searchCode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.BaggagesGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Добавление багажа к доставке
      tags:
      - Багаж
  /baggage/{baggage_id}/image:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к багажу по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      - description: Изображение багажа
        in: formData
        name: image
        required: true
        type: file
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о багаже с изображением
          schema:
            $ref: '#/definitions/model.Baggage'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Добавление изображения к багажу
      tags:
      - Багаж
  /baggage/{baggage_id}/update:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о багаже по его ID
      parameters:
      - description: ID багажа
        in: path
        name: baggage_id
        required: true
        type: integer
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о багаже
          schema:
            $ref: '#/definitions/model.Baggage'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновление информации о багаже
      tags:
      - Багаж
  /baggage/create:
    post:
      consumes:
      - application/json
      description: Создает новый багаж с предоставленными данными
      parameters:
      - description: Код багажа
        format: email
        in: query
        name: searchCode
        type: string
      - description: Пользовательский объект в формате JSON
        in: body
        name: baggage
        required: true
        schema:
          $ref: '#/definitions/model.BaggageRequest'
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.BaggagesGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "403":
          description: У пользователя нет прав для этого запроса
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Создание нового багажа
      tags:
      - Багаж
  /delivery:
    get:
      description: Возвращает список всех не удаленных доставок
      parameters:
      - description: Номер рейса
        format: email
        in: query
        name: searchFlightNumber
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус доставки
        format: email
        in: query
        name: deliveryStatus
        type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список доставок
          schema:
            $ref: '#/definitions/model.DeliveryRequest'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получение списка доставок
      tags:
      - Доставка
  /delivery/{delivery_id}:
    get:
      description: Возвращает информацию о доставке по её идентификатору
      parameters:
      - description: Идентификатор доставки
        in: path
        name: id
        required: true
        type: integer
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.DeliveryGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получение доставки по идентификатору
      tags:
      - Доставка
  /delivery/{delivery_id}/delete:
    delete:
      description: Удаляет доставку по её идентификатору
      parameters:
      - description: Идентификатор доставки
        in: path
        name: id
        required: true
        type: integer
      - description: Номер рейса
        format: email
        in: query
        name: searchFlightNumber
        type: string
      - description: Начало даты формирования
        format: email
        in: query
        name: startFormationDate
        type: string
      - description: Конец даты формирования
        format: email
        in: query
        name: endFormationDate
        type: string
      - description: Статус доставки
        format: email
        in: query
        name: deliveryStatus
        type: string
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список багажей
          schema:
            $ref: '#/definitions/model.DeliveryRequest'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удаление доставки
      tags:
      - Доставка
  /delivery/{delivery_id}/status/moderator:
    put:
      description: Обновляет статус доставки для модератора по идентификатору доставки
      parameters:
      - description: Идентификатор доставки
        in: path
        name: id
        required: true
        type: integer
      - description: Новый статус доставки
        in: body
        name: deliveryStatus
        required: true
        schema:
          $ref: '#/definitions/model.DeliveryUpdateStatusRequest'
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.DeliveryGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновление статуса доставки для модератора
      tags:
      - Доставка
  /delivery/{delivery_id}/status/user:
    put:
      description: Обновляет статус доставки для пользователя по идентификатору доставки
      parameters:
      - description: Идентификатор доставки
        in: path
        name: id
        required: true
        type: integer
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.DeliveryGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновление статуса доставки для пользователя
      tags:
      - Доставка
  /delivery/{delivery_id}/update:
    put:
      description: Обновляет номер рейса для доставки по её идентификатору
      parameters:
      - description: Идентификатор доставки
        in: path
        name: id
        required: true
        type: integer
      - description: Новый номер рейса
        in: body
        name: flightNumber
        required: true
        schema:
          $ref: '#/definitions/model.DeliveryUpdateFlightNumberRequest'
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о доставке
          schema:
            $ref: '#/definitions/model.DeliveryGetResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Обновление номера рейса доставки
      tags:
      - Доставка
  /user/login:
    post:
      consumes:
      - application/json
      description: Авторизация пользователя и генерация JWT-токена
      parameters:
      - description: Данные для входа
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токен
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Вход пользователя
      tags:
      - Пользователь
  /user/logout:
    post:
      description: Выход пользователя из системы и удаление токена из куков
      parameters:
      - description: Токен авторизации
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Успешный ответ
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Выход пользователя
      tags:
      - Пользователь
  /user/register:
    post:
      consumes:
      - application/json
      description: Регистрация нового пользователя с предоставленной информацией.
      parameters:
      - description: Пользовательский объект в формате JSON
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Токен
          schema:
            $ref: '#/definitions/model.UserLoginResponse'
        "400":
          description: Обработанная ошибка сервера
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Регистрация нового пользователя.
      tags:
      - Пользователь
swagger: "2.0"
